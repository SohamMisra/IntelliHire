generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/candidate"
}

datasource db {
  provider = "postgresql"
  url      = env("CANDIDATE_DB_URL")
}

model Candidate {
  id          String   @id @default(uuid())
  email       String   @unique
  name        String
  password    String
  linkedinUrl String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
}

// model Profile {
//   id          String   @id @default(uuid())
//   candidateId String   @unique
//   candidate   Candidate @relation(fields: [candidateId], references: [id])
//   bio         String?
//   skills      String[]
//   experience  Experience[]
//   education   Education[]
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
// }

// model Experience {
//   id          String   @id @default(uuid())
//   profileId   String
//   profile     Profile  @relation(fields: [profileId], references: [id])
//   company     String
//   position    String
//   startDate   DateTime
//   endDate     DateTime?
//   description String?
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
// }

// model Education {
//   id          String   @id @default(uuid())
//   profileId   String
//   profile     Profile  @relation(fields: [profileId], references: [id])
//   institution String
//   degree      String
//   field       String
//   startDate   DateTime
//   endDate     DateTime?
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
// }

// model Interview {
//   id          String   @id @default(uuid())
//   candidateId String
//   candidate   Candidate @relation(fields: [candidateId], references: [id])
//   status      InterviewStatus @default(SCHEDULED)
//   scheduledAt DateTime
//   duration    Int      // in minutes
//   type        InterviewType
//   feedback    String?
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
// }

// enum InterviewStatus {
//   SCHEDULED
//   IN_PROGRESS
//   COMPLETED
//   CANCELLED
// }

// enum InterviewType {
//   TECHNICAL
//   BEHAVIORAL
//   SYSTEM_DESIGN
//   CODING
// } 